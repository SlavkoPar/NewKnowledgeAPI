using Newtonsoft.Json;

namespace NewKnowledgeAPI.Models
{
    /// <summary>
    /// Represents a question, its answer, and its vector embedding for semantic search.
    /// </summary>
    public class EmbeddedQuestion
    {
        /// <summary>
        /// Unique identifier for the question.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = Guid.NewGuid().ToString();

        /// <summary>
        /// Partition key for Cosmos DB (set to Id for simplicity).
        /// </summary>
        [JsonProperty("partitionKey")]
        public string PartitionKey { get; set; } = string.Empty;

        /// <summary>
        /// The question text.
        /// </summary>
        [JsonProperty("question")]
        public string QuestionText { get; set; } = string.Empty;

        /// <summary>
        /// The answer to the question.
        /// </summary>
        [JsonProperty("answer")]
        public string Answer { get; set; } = string.Empty;

        /// <summary>
        /// Vector embedding of the question (generated by OpenAI). Used for semantic similarity search.
        /// </summary>
        [JsonProperty("embedding")]
        public float[] Embedding { get; set; } = Array.Empty<float>();

        /// <summary>
        /// Optional: Category identifier for grouping questions.
        /// </summary>
        [JsonProperty("categoryId")]
        public string? CategoryId { get; set; }

        /// <summary>
        /// Optional: Group identifier for grouping questions.
        /// </summary>
        [JsonProperty("groupId")]
        public string? GroupId { get; set; }
    }
} 